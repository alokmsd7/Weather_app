{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manvendra\\\\Desktop\\\\weather ap\\\\weatherApp-Reactjs-master\\\\src\\\\forcast.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport apiKeys from \"./apiKeys\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\n\nfunction Forcast() {\n  const [query, setQuery] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = city => {\n    axios.get(`${apiKeys.base}weather?q=${city}&units=metric&APPID=${apiKeys.key}`).then(response => {\n      setWeather(response.data);\n      setQuery(\"\");\n      setError(\"\");\n    }).catch(function (error) {\n      console.log(error);\n      setWeather({});\n      setError({\n        message: \"Not Found\",\n        query: city\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (query.trim() !== \"\") {\n      // Only search if the query is not empty\n      search(query);\n    }\n  }, [query]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forecast\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forecast-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactAnimatedWeather, {\n    icon: weather.weather ? weather.weather[0].icon : \"01d\",\n    color: \"white\",\n    size: 112,\n    animate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, weather.weather ? weather.weather[0].main : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-bar\",\n    placeholder: \"Search any city\",\n    onChange: e => setQuery(e.target.value),\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://images.avishkaar.cc/workflow/newhp/search-white.png\",\n    onClick: () => search(query),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, weather.main ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"cityHead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, weather.name, \", \", weather.sys.country), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"temp\",\n    src: `https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`,\n    alt: \"weather icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"Temperature\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, Math.round(weather.main.temp), \"\\xB0c (\", weather.weather[0].main, \")\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Humidity\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, Math.round(weather.main.humidity), \"%\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Visibility\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, Math.round(weather.visibility), \" mi\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \"Wind Speed\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, Math.round(weather.wind.speed), \" Km/h\"))) : /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, error.query, \" \", error.message))));\n}\n\nexport default Forcast;","map":{"version":3,"sources":["C:/Users/Manvendra/Desktop/weather ap/weatherApp-Reactjs-master/src/forcast.js"],"names":["React","useState","useEffect","axios","apiKeys","ReactAnimatedWeather","Forcast","query","setQuery","error","setError","weather","setWeather","search","city","get","base","key","then","response","data","catch","console","log","message","trim","icon","main","e","target","value","name","sys","country","Math","round","temp","humidity","visibility","wind","speed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport apiKeys from \"./apiKeys\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\n\nfunction Forcast() {\n  const [query, setQuery] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = (city) => {\n    axios\n      .get(\n        `${apiKeys.base}weather?q=${city}&units=metric&APPID=${apiKeys.key}`\n      )\n      .then((response) => {\n        setWeather(response.data);\n        setQuery(\"\");\n        setError(\"\");\n      })\n      .catch(function (error) {\n        console.log(error);\n        setWeather({});\n        setError({ message: \"Not Found\", query: city });\n      });\n  };\n\n  useEffect(() => {\n    if (query.trim() !== \"\") {\n      // Only search if the query is not empty\n      search(query);\n    }\n  }, [query]);\n\n  return (\n    <div className=\"forecast\">\n      <div className=\"forecast-icon\">\n        <ReactAnimatedWeather\n          icon={weather.weather ? weather.weather[0].icon : \"01d\"}\n          color=\"white\"\n          size={112}\n          animate={true}\n        />\n      </div>\n      <div className=\"today-weather\">\n        <h3>{weather.weather ? weather.weather[0].main : \"\"}</h3>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search any city\"\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n          />\n          <div className=\"img-box\">\n            {\" \"}\n            <img\n              src=\"https://images.avishkaar.cc/workflow/newhp/search-white.png\"\n              onClick={() => search(query)}\n            />\n          </div>\n        </div>\n        <ul>\n          {weather.main ? (\n            <div>\n              <li className=\"cityHead\">\n                <p>\n                  {weather.name}, {weather.sys.country}\n                </p>\n                <img\n                  className=\"temp\"\n                  src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`}\n                  alt=\"weather icon\"\n                />\n              </li>\n              <li>\n                Temperature{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.main.temp)}°c (\n                  {weather.weather[0].main})\n                </span>\n              </li>\n              <li>\n                Humidity{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.main.humidity)}%\n                </span>\n              </li>\n              <li>\n                Visibility{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.visibility)} mi\n                </span>\n              </li>\n              <li>\n                Wind Speed{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.wind.speed)} Km/h\n                </span>\n              </li>\n            </div>\n          ) : (\n            <li>\n              {error.query} {error.message}\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Forcast;\n"]},"metadata":{},"sourceType":"module"}